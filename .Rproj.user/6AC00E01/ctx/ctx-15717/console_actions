{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        2,
        2,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        2
    ],
    "data": [
        "\nR version 4.3.3 (2024-02-29 ucrt) -- \"Angel Food Cake\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()'",
        " on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n- Project '~/DevOps' loaded. [renv 1.0.5]\n[Workspace loaded from ~/DevOps/.RData]\r\n\r\n",
        "> ",
        "renv::activate",
        "function (project = NULL, profile = NULL) \n{\n    renv_consent_check()\n    renv_scope_error_handler()\n    project <- renv_project_resolve(project)\n    renv_project_lock(project = project)\n    profile <- profile %||% renv_profile_get()\n    renv_profile_set(profile)\n    renv_activate_impl(project = project, profile = profile, \n        version = NULL)\n    invisible(project)\n}\n<bytecode: 0x000001a7f06c6578>\n<environment: namespace:renv>\n",
        "> ",
        "renv::activate()()",
        "Error: attempt to apply non-function\n",
        "\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "> ",
        "renv::activate()",
        "\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "> ",
        "library(reticulate)",
        "> ",
        "venv_path <- normalizePath(\".venv\", mustWork = TRUE)",
        "> ",
        "use_virtualenv(venv_path, required = TRUE)",
        "Warning message:\nPrevious request to `use_python(\"C:/Users/Connor Emmons/AppData/Local/Programs/Python/Python312/python.exe\", required = TRUE)` will be ignored. It is superseded by request to `use_python(\"C:/Users/Connor Emmons/Documents/DevOps/.venv/Scripts/python.exe\") \n",
        "> ",
        "reticulate::repl_python()",
        "Python 3.12.2 (C:/Users/Connor Emmons/Documents/DevOps/.venv/Scripts/python.exe)\nReticulate 1.35.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "from palmerpenguins import penguins",
        ">>> ",
        "from pandas import get_dummies",
        ">>> ",
        "import numpy as np",
        ">>> ",
        "from sklearn.linear_model import LinearRegression",
        ">>> ",
        ">>> ",
        "from sklearn import preprocessing",
        ">>> ",
        ">>> ",
        "df = penguins.load_penguins().dropna()",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "  species     island  bill_length_mm  ...  body_mass_g     sex  year\r\n0  Adelie  Torgersen            39.1  ...       3750.0    male  2007\r\n1  Adelie  Torgersen            39.5  ...       3800.0  female  2007\r\n2  Adelie  Torgersen            40.3  ...       3250.0  female  2007\r\n\r\n[3 rows x 8 columns]\r\n",
        ">>> ",
        ">>> ",
        "X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)",
        ">>> ",
        "y = df['body_mass_g']",
        ">>> ",
        ">>> ",
        "model = LinearRegression().fit(X, y)",
        ">>> ",
        ">>> ",
        "print(f\"R^2 {model.score(X,y)}\")",
        "R^2 0.8555368759537614\r\n",
        ">>> ",
        "print(f\"Intercept {model.intercept_}\")",
        "Intercept 2169.269720939398\r\n",
        ">>> ",
        "print(f\"Columns {X.columns}\")",
        "Columns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\r\n",
        ">>> ",
        "print(f\"Coefficients {model.coef_}\")",
        "Coefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\r\n",
        ">>> ",
        ">>> ",
        "from vetiver import VetiverModel",
        ">>> ",
        "v = VetiverModel(model, model_name='penguin_model', prototype_data=X)",
        ">>> ",
        ">>> ",
        "from pins import board_folder",
        ">>> ",
        "from vetiver import vetiver_pin_write",
        ">>> ",
        ">>> ",
        "model_board = board_folder(\"/data/model\", allow_pickle_read = True)",
        ">>> ",
        "vetiver_pin_write(model_board, v)",
        "Model Cards provide a framework for transparent, responsible reporting. \r\n Use the vetiver `.qmd` Quarto template as a place to start, \r\n with vetiver.model_card()\r\nWriting pin:\r\nName: 'penguin_model'\r\nVersion: 20240422T081225Z-a6f9b\r\n",
        ">>> ",
        ">>> ",
        "from vetiver import VetiverAPI",
        ">>> ",
        "app = VetiverAPI(v, check_prototype = True)",
        ">>> ",
        ">>> ",
        "quit",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "df <- palmerpenguins::penguins",
        "> ",
        "df %>%",
        "+ ",
        "  group_by(species, sex) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    across(",
        "+ ",
        "      where(is.numeric), ",
        "+ ",
        "      \\(x) mean(x, na.rm = TRUE)",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "  knitr::kable()",
        "> ",
        "df %>%",
        "+ ",
        "  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method = \"lm\")",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "Error: object 'con' not found\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "Error: object 'con' not found\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "df <- palmerpenguins::penguins",
        "Error in yaml::yaml.load(..., eval.expr = TRUE) : \n  Scanner error: while scanning a simple key at line 5, column 1 could not find expected ':' at line 6, column 1\n",
        "\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "> ",
        "renv::init()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "1",
        "- The library is already synchronized with the lockfile.\n\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "> ",
        "df %>%",
        "+ ",
        "  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method = \"lm\")",
        "Error in df %>% ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) : \n  could not find function \"%>%\"\n",
        "> ",
        "renv::snapshot()",
        "The following package(s) will be updated in the lockfile:\n\n# CRAN -----------------------------------------------------------------------\n- DBI      [* -> 1.2.2]\n- duckdb   [* -> 0.10.1]\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n- Lockfile written to \"~/DevOps/renv.lock\".\n",
        "> ",
        "DBI::dbDisconnect(con)",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'conn' in selecting a method for function 'dbDisconnect': object 'con' not found\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "Error in loadNamespace(x) : there is no package called ‘dbplyr’\n",
        "> ",
        "install.packages(\"dbplyr\")",
        "# Downloading packages -------------------------------------------------------\n- Downloading dbplyr from CRAN ...              OK [1.2 Mb in 0.98s]\n- Downloading blob from CRAN ...                OK [47.5 Kb in 0.43s]\n- Downloading purrr from CRAN ...               OK [488.9 Kb in 0.55s]\n- Downloading tidyr from CRAN ...               OK [1.2 Mb in 0.87s]\n- Downloading cpp11 from CRAN ...               OK [297.2 Kb in 0.44s]\nSuccessfully downloaded 5 packages in 4.8 seconds.\n\nThe following package(s) will b",
        "e installed:\n- blob   [1.2.4]\n- cpp11  [0.4.7]\n- dbplyr [2.5.0]\n- purrr  [1.0.2]\n- tidyr  [1.3.1]\nThese packages will be installed into \"~/DevOps/renv/library/R-4.3/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing blob ...                           OK [installed binary and cached in 0.35s]\n- Installing purrr ...                          OK [installed binary and cached in 0.35s]\n- Installing cpp11 ...                          OK [installed binary and cached in 0.35s]\n- Installing tidyr ...                          OK [installed binary and cached in 0.34s]\n- Installing dbplyr ...                         OK [installed binary and",
        " cached in 0.34s]\nSuccessfully installed 5 packages in 1.9 seconds.\n",
        "> ",
        "renv::snapshot()",
        "- The lockfile is already up to date.\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q01 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q01\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q01\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  ",
        "4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q02 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q02\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q02\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  ",
        "4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "df %>%",
        "+ ",
        "  group_by(species, sex) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    across(",
        "+ ",
        "      where(is.numeric), ",
        "+ ",
        "      \\(x) mean(x, na.rm = TRUE)",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "  dplyr::collect() %>%",
        "+ ",
        "  knitr::kable()",
        "> ",
        "df %>%",
        "+ ",
        "  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method = \"lm\")",
        "Warning: Connection is garbage-collected, use dbDisconnect() to avoid this.\n",
        "> ",
        "DBI::dbDisconnect(con)",
        "\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "Loading required package: duckdb\nLoading required package: DBI\n",
        "> ",
        "renv::status()",
        "The following package(s) are in an inconsistent state:\n\n package installed recorded used\n blob    y         n        y   \n cpp11   y         n        y   \n dbplyr  y         n        y   \n purrr   y         n        y   \n stringi y         n        y   \n stringr y         n        y   \n tidyr   y         n        y   \n\nSee ?renv::status() for advice on resolving these issues.\n",
        "> ",
        "?renv::status()",
        "> ",
        "renv::snapshot()",
        "The following package(s) will be updated in the lockfile:\n\n# CRAN -----------------------------------------------------------------------\n- blob      [* -> 1.2.4]\n- cpp11     [* -> 0.4.7]\n- dbplyr    [* -> 2.5.0]\n- purrr     [* -> 1.0.2]\n- stringi   [* -> 1.8.3]\n- stringr   [* -> 1.5.1]\n- tidyr     [* -> 1.3.1]\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n- Lockfile written to \"~/DevOps/renv.lock\".\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q01 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q01\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q01\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  ",
        "4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "> ",
        "df %>%",
        "+ ",
        "  group_by(species, sex) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    across(",
        "+ ",
        "      where(is.numeric), ",
        "+ ",
        "      \\(x) mean(x, na.rm = TRUE)",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "  dplyr::collect() %>%",
        "+ ",
        "  knitr::kable()",
        "\u001B[1m\u001B[33mError\u001B[39m in `summarise()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[36mℹ\u001B[39m In argument: `across(where(is.numeric), function(x) mean(x, na.rm = TRUE))`\n\u001B[1mCaused by error in `across()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m This tidyselect interface doesn't support predicates.\nBacktrace:\n\u001B[90m  1. \u001B[39m... %>% knitr::kable()\n\u001B[90m  5. \u001B[39m\u001B[1mdbplyr\u001B[22m:::summarise.tbl_lazy(...)\n\u001B[90m  6. \u001B[39mdbplyr:::summarise_eval_dots(.data, ...)\n\u001B[90m  7. \u001B[39mdbplyr:::partial_eval_quo(dot, .data, error_call, dot_name, was_named[[i]])\n\u001B[",
        "90m  9. \u001B[39mdbplyr::partial_eval(get_expr(x), data, get_env(x), error_call = error_call)\n     ...\n\u001B[90m 12. \u001B[39m\u001B[1mtidyselect\u001B[22m::eval_select(...)\n\u001B[90m 13. \u001B[39mtidyselect:::eval_select_impl(...)\n\u001B[90m 16. \u001B[39mtidyselect:::vars_select_eval(...)\n\u001B[90m 17. \u001B[39mtidyselect:::walk_data_tree(expr, data_mask, context_mask)\n\u001B[90m 18. \u001B[39mtidyselect:::as_indices_sel_impl(...)\n",
        "> ",
        "df %>%",
        "+ ",
        "  group_by(species, sex) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    across(",
        "+ ",
        "        ends_with(\"mm\") | ends_with(\"g\"),",
        "+ ",
        "      \\(x) mean(x, na.rm = TRUE)",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "  dplyr::collect() %>%",
        "+ ",
        "  knitr::kable()",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "> ",
        "df %>%",
        "+ ",
        "  group_by(species, sex) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    across(",
        "+ ",
        "        ends_with(\"mm\") | ends_with(\"g\"),",
        "+ ",
        "      \\(x) mean(x, na.rm = TRUE)",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "  dplyr::collect() %>%",
        "+ ",
        "  knitr::kable()",
        "> ",
        "df %>%",
        "+ ",
        "  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method = \"lm\")",
        "Warning: Connection is garbage-collected, use dbDisconnect() to avoid this.\nWarning: Connection is garbage-collected, use dbDisconnect() to avoid this.\n",
        "> ",
        "DBI::dbDisconnect(con)",
        "\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "Loading required package: duckdb\nLoading required package: DBI\n",
        "> ",
        "renv::init()()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "1",
        "- The library is already synchronized with the lockfile.\n",
        "Error: attempt to apply non-function\n",
        "\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "Loading required package: duckdb\nLoading required package: DBI\n",
        "> ",
        "renv::status()",
        "No issues found -- the project is in a consistent state.\n",
        "> ",
        "renv::init()",
        "This project already has a lockfile. What would you like to do? \n\n1: Restore the project from the lockfile.\n2: Discard the lockfile and re-initialize the project.\n3: Activate the project without snapshotting or installing any packages.\n4: Abort project initialization.\n\n",
        "Selection: ",
        "1",
        "- The library is already synchronized with the lockfile.\n\nRestarting R session...\n\n",
        "- Project '~/DevOps' loaded. [renv 1.0.5]\n",
        "Loading required package: duckdb\nLoading required package: DBI\n",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "library(DBI)",
        "> ",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "> ",
        "df %>%",
        "+ ",
        "  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method = \"lm\")",
        "> ",
        "DBI::dbDisconnect(con)",
        "> ",
        "library(reticulate)",
        "> ",
        "venv_path <- normalizePath(\".venv\", mustWork = TRUE)",
        "> ",
        "use_virtualenv(venv_path, required = TRUE)",
        "Warning message:\nPrevious request to `use_python(\"C:/Users/Connor Emmons/AppData/Local/Programs/Python/Python312/python.exe\", required = TRUE)` will be ignored. It is superseded by request to `use_python(\"C:/Users/Connor Emmons/Documents/DevOps/.venv/Scripts/python.exe\") \n",
        "> ",
        "reticulate::repl_python()",
        "Python 3.12.2 (C:/Users/Connor Emmons/Documents/DevOps/.venv/Scripts/python.exe)\nReticulate 1.35.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "import duckdb",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"\u001B[90m\u001B]8;line = 119;file://C:\\Users\\Connor Emmons\\AppData\\Local\\R\\cache\\R\\renv\\cache\\v5\\R-4.3\\x86_64-w64-mingw32\\reticulate\\1.35.0\\90be16b53b955990db4aa355c03d85eb\\reticulate\\python\\rpytools\\loader.py\u0007C:\\Users\\Connor Emmons\\AppData\\Local\\R\\cache\\R\\renv\\cache\\v5\\R-4.3\\x86_64-w64-mingw32\\reticulate\\1.35.0\\90be16b53b955990db4aa355c03d85eb\\reticulate\\python\\rpytools\\loader.py\u001B]8;;\u0007\u001B[39m\", line 119, in _find_and_load_hook\n    retur",
        "n _run_hook(name, _hook)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"\u001B[90m\u001B]8;line = 93;file://C:\\Users\\Connor Emmons\\AppData\\Local\\R\\cache\\R\\renv\\cache\\v5\\R-4.3\\x86_64-w64-mingw32\\reticulate\\1.35.0\\90be16b53b955990db4aa355c03d85eb\\reticulate\\python\\rpytools\\loader.py\u0007C:\\Users\\Connor Emmons\\AppData\\Local\\R\\cache\\R\\renv\\cache\\v5\\R-4.3\\x86_64-w64-mingw32\\reticulate\\1.35.0\\90be16b53b955990db4aa355c03d85eb\\reticulate\\python\\rpytools\\loader.py\u001B]8;;\u0007\u001B[39m\", line 93, in _run_hook\n    module = hook()\n             ^^^",
        "^^^\n  File \"\u001B[90m\u001B]8;line = 117;file://C:\\Users\\Connor Emmons\\AppData\\Local\\R\\cache\\R\\renv\\cache\\v5\\R-4.3\\x86_64-w64-mingw32\\reticulate\\1.35.0\\90be16b53b955990db4aa355c03d85eb\\reticulate\\python\\rpytools\\loader.py\u0007C:\\Users\\Connor Emmons\\AppData\\Local\\R\\cache\\R\\renv\\cache\\v5\\R-4.3\\x86_64-w64-mingw32\\reticulate\\1.35.0\\90be16b53b955990db4aa355c03d85eb\\reticulate\\python\\rpytools\\loader.py\u001B]8;;\u0007\u001B[39m\", line 117, in _hook\n    return _find_and_load(name, import_)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nModuleNotFo",
        "undError: No module named 'duckdb'\n",
        ">>> ",
        "con = duckdb.connect('my-db.duckdb')",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'duckdb' is not defined\n",
        ">>> ",
        "df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'con' is not defined\n",
        ">>> ",
        "con.close()",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'con' is not defined\n",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nNameError: name 'df' is not defined\n",
        ">>> ",
        ">>> ",
        "exit",
        "> ",
        "library(reticulate)",
        "> ",
        "venv_path <- normalizePath(\".venv\", mustWork = TRUE)",
        "> ",
        "use_virtualenv(venv_path, required = TRUE)",
        "> ",
        "reticulate::repl_python()",
        "Python 3.12.2 (C:/Users/Connor Emmons/Documents/DevOps/.venv/Scripts/python.exe)\nReticulate 1.35.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "import duckdb",
        ">>> ",
        "con = duckdb.connect('my-db.duckdb')",
        ">>> ",
        "df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()",
        ">>> ",
        "con.close()",
        ">>> ",
        ">>> ",
        "df.head(3)",
        "  species     island  bill_length_mm  ...  body_mass_g     sex  year\r\n0  Adelie  Torgersen            39.1  ...       3750.0    male  2007\r\n1  Adelie  Torgersen            39.5  ...       3800.0  female  2007\r\n2  Adelie  Torgersen            40.3  ...       3250.0  female  2007\r\n\r\n[3 rows x 8 columns]\r\n",
        ">>> ",
        ">>> ",
        "from palmerpenguins import penguins",
        ">>> ",
        "from pandas import get_dummies",
        ">>> ",
        "import numpy as np",
        ">>> ",
        "from sklearn.linear_model import LinearRegression",
        ">>> ",
        "from sklearn import preprocessing",
        ">>> ",
        ">>> ",
        "X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)",
        ">>> ",
        "y = df['body_mass_g']",
        ">>> ",
        ">>> ",
        "model = LinearRegression().fit(X, y)",
        ">>> ",
        ">>> ",
        "print(f\"R^2 {model.score(X,y)}\")",
        "R^2 0.8555368759537614\r\n",
        ">>> ",
        "print(f\"Intercept {model.intercept_}\")",
        "Intercept 2169.269720939398\r\n",
        ">>> ",
        "print(f\"Columns {X.columns}\")",
        "Columns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\r\n",
        ">>> ",
        "print(f\"Coefficients {model.coef_}\")",
        "Coefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\r\n",
        ">>> ",
        ">>> ",
        "from vetiver import VetiverModel",
        ">>> ",
        "v = VetiverModel(model, model_name='penguin_model', prototype_data=X)",
        ">>> ",
        ">>> ",
        "from pins import board_folder",
        ">>> ",
        "from vetiver import vetiver_pin_write",
        ">>> ",
        ">>> ",
        "model_board = board_folder(\"/data/model\", allow_pickle_read = True)",
        ">>> ",
        "vetiver_pin_write(model_board, v)",
        "Model Cards provide a framework for transparent, responsible reporting. \r\n Use the vetiver `.qmd` Quarto template as a place to start, \r\n with vetiver.model_card()\r\nWriting pin:\r\nName: 'penguin_model'\r\nVersion: 20240422T085800Z-a6f9b\r\n",
        ">>> ",
        ">>> ",
        "from vetiver import VetiverAPI",
        ">>> ",
        "app = VetiverAPI(v, check_prototype = True)",
        ">>> ",
        "\nRestarting R session...\n\n"
    ]
}