renv::init()
renv::snapshot()
renv::snapshot()
python
py
install.packages("reticulate")
renv::snapshot()
library(reticulate)
renv::snapshot()
py
py -m venv .venv
{venv}
venv
py venv
python -m venv .venv
source .venv /bin/activate
1 + 1
reticulate::repl_python()
py -m venv .venv
python -m venv .venv
venv .venv
py venv .venv
py -m venv .venv
py -m venv .venv
quit
()
system("py -m venv .venv")
use_virtualenv(".venv")
library(reticulate)
use_virtualenv(".venv")
system("py -m venv .venv")
library(reticulate)
use_virtualenv(".venv")
use_virtualenv(".venv", required = TRUE)
source .venv /bin/activate
system("source .venv /bin/activate")
py_config()
venv_path <- normalizePath(".venv", winslash = "/")
use_python(paste0(venv_path, "/bin/python"), required = TRUE)
.venv\Scripts\activate
use_virtualenv(venv_path, required = TRUE)
venv_path <- normalizePath(".venv", winslash = "/")
use_virtualenv(venv_path, required = TRUE)
system("use_virtualenv(venv_path, required = TRUE)")
py_config()
library(reticulate)
venv_path <- normalizePath(".venv", winslash = "/")
use_virtualenv(venv_path, required = TRUE)
py_config()
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
pip install palmerpenguins
quit
py_config()
palmerpenguins
palmerpenguins::path_to_file()
palmerpenguins
install.packages("palmerpenguins")
library(palmerpenguins)
library(dplyr)
library(ggplot2)
df <- palmerpenguins::penguins
renv::snapshot()
install(pandas)
install.packages(pandas)
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
pip install palmerpenguins
quit
pip install palmerpenguins
pip install palmerpenguins::penguins
palmerpenguins::penguins
reticulate::repl_python()
df = penguins.load_penguins().dropna()
df.head(3)
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
quit
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
quit
py_install(c("palmerpenguins", "pandas", "numpy", "scikit-learn"), envname = "C:/Users/Connor Emmons/Documents/DevOps/.venv")
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
df = penguins.load_penguins().dropna()
df.head(3)
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
quit
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
palmerpenguins
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
quit
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
reticulate::repl_python()
quit
reticulate::repl_python()
from palmerpenguins import penguins
from palmerpenguins import penguins
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
pip install jupyter
.\pip install jupyter
pip freeze > requirements.txt
quit
system("pip install jupyter")
system("pip freeze > requirements.txt")
system(".\pip freeze > requirements.txt")
system("pip freeze > requirements.txt")
py_config()
system("cd")
reticulate
reticulate::py pip freeze > requirements.txt
reticulate::py
pip freeze > requirements.txt
reticulate::repl_python()
pip freeze > requirements.txt
quit
